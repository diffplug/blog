plugins {
	id "com.diffplug.gradle.spotless" version "3.27.0"
}

////////////
// FORMAT //
////////////
String FOLLOW_LINK = '''
[![Watch](https://img.shields.io/github/watchers/diffplug/blog.svg?style=social&label=Watch)](https://github.com/diffplug/blog/subscription)
[![Star](https://img.shields.io/github/stars/diffplug/blog.svg?style=social&label=Star)](https://github.com/diffplug/blog/stargazers)
[![Follow @DiffPlug](https://img.shields.io/twitter/follow/DiffPlug.svg?style=social&label=Follow)](https://twitter.com/DiffPlug)
[![Follow @NedTwigg](https://img.shields.io/twitter/follow/NedTwigg.svg?style=social&label=Follow)](https://twitter.com/NedTwigg)
[Blog](http://discuss.diffplug.com/c/blog), echoed on [Medium](https://medium.com/diffplug)
[Facebook](https://www.facebook.com/DiffPlug)

'''
// apply formatting in the root project so that we get formatting for our README, project files, etc
spotless {
	java {
		target '**/*.java'
		licenseHeaderFile	'spotless.license.javaheader'	// License header file
		importOrderFile		'spotless.importorder'			// An import ordering file, exported from Eclipse
		eclipse().configFile 'spotless.eclipseformat.xml'	// XML file dumped out by the Eclipse formatter
		custom 'Lambda fix', { it.replace('} )', '})').replace('} ,', '},') }
	}
	format 'misc', {
		target '**/.gitignore', '**/*.gradle', '**/*.md', '**/*.sh'
		indentWithTabs()
		trimTrailingWhitespace()
		endWithNewline()
	}
	freshmark {
		properties {
			it.put('follow', FOLLOW_LINK)
		}
	}
}
check.dependsOn('spotlessCheck')
